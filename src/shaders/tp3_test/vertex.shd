#version 420
uniform mat4 view;
uniform mat4 projection;
uniform mat4 transformation;

in vec3 position;
in vec3 normalFlat;
in vec3 normalSmooth;
in vec3 color;
in vec2 uv;

vec3 light_color = vec3(1.0, 1.0, 1.0);
vec3 light_position = vec3(1.0, 1.0, 5.0);

out vec2 interpolated_uv_position;
out vec4 interpolated_color;

void main() {
    vec3 light_dir = light_position - position.xyz;
    float coef = dot(normalize(normalSmooth), normalize(light_dir));

    coef = clamp(coef, 0, 1);
    interpolated_color = vec4(color * coef * light_color, 1.0);

    gl_Position = projection * view * transformation * vec4(position, 1.0);
    interpolated_uv_position = uv;
}
