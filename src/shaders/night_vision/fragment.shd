#version 420

uniform sampler2D texture_sampler;
uniform sampler2D lighting_sampler;
uniform sampler2D normalmap_sampler;
layout(location=0) out vec4 output_color;

in vec2 interpolated_uv_position;
in vec4 interpolated_color;

uniform vec2 windowsize;

bool in_binoculars(vec2 pos, float radius)
{
    float tempx = (pos.x - windowsize.x/2 - radius) / 2;
    float tempy = (pos.y - windowsize.y/2) / 2;
    float left_circle = tempx*tempx + tempy*tempy - radius*radius;

    tempx = (pos.x - windowsize.x/2 + radius) / 2;
    float right_circle = tempx*tempx + tempy*tempy - radius*radius;

    return left_circle <=0 || right_circle <= 0;
}

void main() {

    if(in_binoculars(gl_FragCoord.xy, 100))
    {
        // greyscale
        vec4 greyfac = vec4(0.21, 0.72, 0.07, 0);
        float grey = dot(interpolated_color, greyfac);

        vec4 green = vec4(0., 0.9, 0., 1);
        output_color = vec4(grey)*green;
    }
    else
        output_color = vec4(0);
}
